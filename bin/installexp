#!/usr/bin/env ruby
# encoding: utf-8

require 'open3'
require 'fileutils'

def ExecutablePath (ex)
    return "#{File.dirname(__FILE__)}/#{ex}"
end

def ExecuteCommand(command, debug)
    stdin, stdout, stderr, wait_thr = Open3.popen3(command)

    res = stdout.read

    if debug
        puts ">>>>>>>>>>>>>>>>>>>>>>>>>"
        puts "Command '#{command}'"
        puts res
        puts "<<<<<<<<<<<<<<<<<<<<<<<<<"
    end
    
    stdin.close
    stdout.close
    stderr.close

    return res
end

def FindPackageName(debug)
    check_apaapt = ExecuteCommand("which apaapt", debug)
    if check_apaapt.length == 0
        puts "Could not find apaapt in your path"
        return ""
    end

    apks = Dir['**/*.apk']
    if(apks.length == 0)
        puts "No APK file found"
        return ""
    end

    info = ExecuteCommand("#{ExecutablePath('apaapt')} dump badging #{apks[0]}", debug)

    matchdata = info.match("package: name='?(.+)' versionCode='.+' versionName='.+'")
    package_name = matchdata[1]

    if package_name.length == 0 
        puts "Could not figure out package name"
        return ""
    end
    return package_name
end

def InstallAPK(package_name, debug)
    obb = Dir['**/*.obb']
    if(obb.length == 0)
        puts "Could not find the stupid obb file"
        return false
    end

    obb_file = obb[0]
    apk_file = Dir['**/*.apk'][0]

    puts "Deleting application if present"
    ExecuteCommand("#{ExecutablePath('apadb')} uninstall #{package_name}", debug)
    
    version_string = ExecuteCommand("#{ExecutablePath('apadb')} shell getprop ro.build.version.release", debug)
    version = version_string.match("\\d.(\\d)*")[0].to_f

    path_prefix = "/mnt/sdcard/Android/obb"
    if version >= 4.2
        path_prefix = "/mnt/shell/emulated/obb"
    end

    puts "Pushing expansion file"
    ExecuteCommand("#{ExecutablePath('apadb')} push #{obb_file} #{path_prefix}/#{package_name}/#{File.basename(obb_file)}", debug)
    puts "Installing application"
    ExecuteCommand("#{ExecutablePath('apadb')} install #{apk_file}", debug)
    return true
end

def InstallPack(file, debug)
    unzip_location = "/tmp/#{file}_unzip"
    if File.exists?(unzip_location)
        FileUtils.rm_rf(unzip_location)
    end
    ExecuteCommand("unzip #{file} -d #{unzip_location}", debug)
    if(!File.exists?(unzip_location))
        puts "Could not unzip the damn file"
        return
    end

    FileUtils.cd(unzip_location) do
        package_name = FindPackageName(debug)
        if package_name.length == 0
            return
        end
        success = InstallAPK(package_name, debug)
        if success
            puts "Successfully installed application"
        else
            puts "Something went wrong"
        end
    end
    puts "Cleaning up"
    FileUtils.rm_rf(unzip_location)
end

if ARGV.length != 1 && ARGV.length != 2
    puts "Invalid File"
else
    file = ARGV[0]
    if File.exists?(file)
        InstallPack(file, ARGV[1] == "debug")
    else
        puts "Specified file does not exist"
    end
end
